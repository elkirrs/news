<?php

namespace app\models;

use Yii;
use yii\data\Pagination;

/**
 * This is the model class for table "news".
 *
 * @property int $id
 * @property string $nameNews
 * @property string $annotatio
 * @property string $contentNews
 * @property string $files
 * @property string $dateNews
 * @property int $category_id
 *
 * @property Commentsnews[] $commentsnews
 * @property Category $category
 */
class News extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'news';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['nameNews', 'annotatio', 'contentNews'], 'required'],
            [['contentNews'], 'string'],
            [['dateNews'], 'safe'],
            [['dateNews'], 'date', 'format' => 'php:Y-m-d'],
            [['dateNews'], 'default', 'value' => date('Y-m-d')],
            [['category_id'], 'integer'],
            [['nameNews'], 'string', 'max' => 500],
            [['annotatio', 'files'], 'string', 'max' => 1000],
            [['category_id'], 'exist', 'skipOnError' => true, 'targetClass' => Category::className(), 'targetAttribute' => ['category_id' => 'id']],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'nameNews' => 'Name News',
            'annotatio' => 'Annotatio',
            'contentNews' => 'Content News',
            'files' => 'Files',
            'dateNews' => 'Date News',
            'category_id' => 'Category ID',
        ];
    }


    public function saveImage($filename)
    {
        $this->files = $filename;
        return $this->save(false);
    }

    /**
     * Удаление картинки если вся статья удалена
     */
    public function deleteImage()
    {
        $imageUploadModel = new ImageUpload();
        $imageUploadModel->deleteCurrentImage($this->files);
    }


    /**
     * Отображает картинку в листенге админа
     */
    public function getImage()
    {
        return ($this->files) ? '/news/web/uploads/' . $this->files : '/news/web/no-image.png';
    }

    /**
     * Вызов метода автоматческого удаления файла при удалении статьи
     */
    public function beforeDelete()
    {
        $this->deleteImage();
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }



    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCommentsnews()
    {
        return $this->hasMany(Commentsnews::className(), ['news_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCategory()
    {
        return $this->hasOne(Category::className(), ['id' => 'category_id']);
    }

    public function getDate()
    {
        return Yii::$app->formatter->asDate($this->dateNews);
    }

    public static function getAll($pageSize = 15)
    {

        $query = News::find()->orderBy(['id' => SORT_DESC]);
        $count = $query->count();
        $pages = new Pagination(['totalCount' => $count, 'pageSize' => $pageSize]);
        $news = $query->offset($pages->offset)
            ->limit($pages->limit)
            ->all();

        $data['news'] = $news;
        $data['pages'] = $pages;


        return $data;
    }

}
